// Lab_04_6.cpp
// < Величко Іван >
// Лабораторна робота № 4.5
// Вкладені цикли
// Варіант 0.4

#include <iostream>  // Підключення бібліотеки для введення/виведення
#include <iomanip>   // Підключення бібліотеки для форматування виводу

using namespace std; // Використання простору імен std

int main()
{
    double P, S; // P - накопичувальний добуток, S - накопичувальна сума
    int j, i;    // j - лічильник для зовнішнього циклу, i - лічильник для внутрішнього

    // Перший спосіб обчислення
    P = 1;
    j = 1;

    while (j <= 15) // Зовнішній цикл для j від 1 до 15
    {
        S = 0;
        i = j;

        while (i <= j * j) // Внутрішній цикл для сумування квадратів
        {
            S += 1.0 * i * i; // Додавання квадрату i до S
            i++;
        }

        P *= sqrt(S); // Помноження P на корінь з S
        j++; // Збільшення j
    }

    cout << P << endl; // Виведення результату

    // Другий спосіб обчислення з використанням do-while
    P = 1;
    j = 1;

    do {
        S = 0;
        i = j;

        do {
            S += 1.0 * i * i; // Додавання квадрату i до S
            i++;
        } while (i <= j * j); // Внутрішній цикл

        P *= sqrt(S); // Помноження P на корінь з S
        j++; // Збільшення j

    } while (j <= 15); // Зовнішній цикл

    cout << P << endl; // Виведення результату

    // Третій спосіб обчислення з використанням for
    P = 1;

    for (j = 1; j <= 15; j++) // Зовнішній цикл
    {
        S = 0;

        for (i = j; i <= j * j; i++) // Внутрішній цикл
        {
            S += 1.0 * i * i; // Додавання квадрату i до S
        }

        P *= sqrt(S); // Помноження P на корінь з S
    }

    cout << P << endl; // Виведення результату

    // Четвертий спосіб обчислення з циклом у зворотному напрямку
    P = 1;

    for (j = 15; j >= 1; j--) // Зовнішній цикл у зворотному напрямку
    {
        S = 0;

        for (i = j * j; i >= j; i--) // Внутрішній цикл у зворотному напрямку
        {
            S += 1.0 * i * i; // Додавання квадрату i до S
        }

        P *= sqrt(S); // Помноження P на корінь з S
    }

    cout << P << endl; // Виведення результату

    return 0;
}
